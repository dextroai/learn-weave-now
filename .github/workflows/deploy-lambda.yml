name: Deploy Containerized Lambda to AWS

on:
  workflow_dispatch:  # Manual trigger
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
  push:
    branches:
      - main  # Auto-deploy on main branch push
    paths:
      - 'aws-lambda/**'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  FUNCTION_NAME: blog-monitor-lambda
  REPOSITORY_NAME: blog-monitor-lambda

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get AWS Account ID
      id: aws-account
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        echo "account-id=$ACCOUNT_ID" >> $GITHUB_OUTPUT
        echo "repository-uri=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPOSITORY_NAME" >> $GITHUB_OUTPUT

    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr create-repository \
          --repository-name $REPOSITORY_NAME \
          --region $AWS_REGION \
          --image-scanning-configuration scanOnPush=true \
          --image-tag-mutability MUTABLE \
          2>/dev/null || echo "Repository already exists"

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      working-directory: ./aws-lambda
      run: |
        docker build -t $REPOSITORY_NAME:latest .
        docker tag $REPOSITORY_NAME:latest ${{ steps.aws-account.outputs.repository-uri }}:latest
        docker tag $REPOSITORY_NAME:latest ${{ steps.aws-account.outputs.repository-uri }}:${{ github.sha }}

    - name: Push Docker image to ECR
      run: |
        docker push ${{ steps.aws-account.outputs.repository-uri }}:latest
        docker push ${{ steps.aws-account.outputs.repository-uri }}:${{ github.sha }}

    - name: Docker Push Summary
      run: |
        echo "‚úÖ Docker image pushed successfully!"
        echo ""
        echo "üìä Resources created:"
        echo "üê≥ Docker Image: ${{ steps.aws-account.outputs.repository-uri }}:latest"
        echo "üê≥ Tagged Image: ${{ steps.aws-account.outputs.repository-uri }}:${{ github.sha }}"
        echo ""
        echo "üîó AWS Console Link:"
        echo "ECR: https://console.aws.amazon.com/ecr/repositories/$REPOSITORY_NAME"